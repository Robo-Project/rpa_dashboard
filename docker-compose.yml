version: '3.5'

services:

    grafana:
        container_name: grafana
        network_mode: host
        image: roboteam/rpa_dashboard_grafana
        restart: unless-stopped
        volumes:
            - grafana-storage:/var/lib/grafana
        ports:
            - '3000:3000'
        env_file:
            - backend.env

    postgres:
        container_name: postgres
        network_mode: host
        image: postgres:12.1-alpine
        restart: unless-stopped
        privileged: true
        volumes:
            - database:/var/lib/postgresql/data:z
        environment:
            TZ: 'Europe/Helsinki'
            PGTZ: 'Europe/Helsinki'
        env_file:
            - postgres.env
        ports:
            - '5432:5432'

    jenkins_docker:
        container_name: jenkins-docker
        network_mode: host
        image: docker:19-dind
        privileged: true
        volumes:
            - jenkins-docker-certs:/certs/client
            - jenkins-data:/var/jenkins_home
        environment:
            - DOCKER_TLS_CERTDIR=/certs
        ports:
            - '2376:2376'

    jenkins:
        container_name: jenkins
        network_mode: host
        image: roboteam/rpa_dashboard_jenkins
        restart: unless-stopped
        depends_on:
            - jenkins_docker
        volumes:
            - jenkins-data:/var/jenkins_home
            - jenkins-docker-certs:/certs/client:ro
        environment:
            - DOCKER_HOST=tcp://localhost:2376
            - DOCKER_CERT_PATH=/certs/client
            - DOCKER_TLS_VERIFY=1
        env_file:
            - postgres.env
        ports:
            - '8080:8080'
            - '50000:50000'

    nginx-proxy:
        container_name: nginx
        network_mode: host
        image: nginx:1.17.9-alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./certs:/etc/nginx/certs
            - ./nginx.conf:/etc/nginx/nginx.conf
            - /var/log/nginx/access.log:/var/log/nginx/access.log
            - /var/log/nginx/error.log:/var/log/nginx/error.log
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        depends_on:
            - jenkins
            - postgres
            - jenkins_docker
            - grafana
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    jenkins-service:
        network_mode: host
        container_name: backend
        image: roboteam/jenkins_service
        ports:
            - '4000:4000'
        volumes:
            - ./jenkins-api-token:/jenkins-api-token
            - ./certs:/certs
        env_file:
            - backend.env

    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            
volumes:
    database:
    jenkins-data:
    jenkins-docker-certs:
    grafana-storage:

