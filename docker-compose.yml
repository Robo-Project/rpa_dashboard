version: '3.5'

services:

    grafana:
        container_name: grafana
        network_mode: host
        image: roboteam/rpa_dashboard_grafana
        restart: unless-stopped
        ports:
            - 3000:3000
        environment:
            - GF_PANELS_DISABLE_SANITIZE_HTML=true
            - GF_SECURITY_ALLOW_EMBEDDING=true

    postgres:
        container_name: postgres
        image: postgres:12.1-alpine
        restart: unless-stopped
        privileged: true
        volumes:
            - rpa_database:/var/lib/postgresql/data:z
        environment:
            TZ: 'Europe/Helsinki'
            PGTZ: 'Europe/Helsinki'
        ports:
            - 5432:5432

    jenkins_docker:
        container_name: jenkins-docker
        image: docker:19-dind
        privileged: true
        volumes:
            - jenkins-docker-certs:/certs/client
            - jenkins-data:/var/jenkins_home
        environment:
            - DOCKER_TLS_CERTDIR=/certs
        networks:
          jenkins:
            aliases:
              - docker
        ports:
            - 2376:2376

    jenkins:
        container_name: jenkins
        image: roboteam/rpa_dashboard_jenkins
        restart: unless-stopped
        depends_on:
          - jenkins_docker
        volumes:
            - jenkins-data:/var/jenkins_home
            - jenkins-docker-certs:/certs/client:ro
        environment:
            - DOCKER_HOST=tcp://docker:2376
            - DOCKER_CERT_PATH=/certs/client
            - DOCKER_TLS_VERIFY=1
        networks:
            - jenkins
        ports:
            - 8080:8080
            - 50000:50000

    nginx-proxy:
        container_name: nginx
        network_mode: host
        image: roboteam/rpa_dashboard_nginx
        ports:
            - "80:80"
        expose:
            - "80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
        depends_on:
            - jenkins
            - postgres
            - jenkins_docker
            - grafana

    jenkins-service:
        network_mode: host
        container_name: jenkins-service-backend
        image: roboteam/jenkins_service
        ports:
            - 4000:4000

    watchtower:
        image: containrrr/watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            
volumes:
    rpa_database:
    jenkins-data:
    jenkins-docker-certs:

networks:
    jenkins:
